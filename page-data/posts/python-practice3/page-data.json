{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/python-practice3","result":{"data":{"markdownRemark":{"id":"4407d9ea-de12-545e-bc0f-19161dd75dbb","html":"<h4 id=\"1-complete-the-code-to-iterate-through-the-keys-and-values-of-the-car_prices-dictionary-printing-out-some-information-about-each-one\"><a href=\"#1-complete-the-code-to-iterate-through-the-keys-and-values-of-the-car_prices-dictionary-printing-out-some-information-about-each-one\" aria-label=\"1 complete the code to iterate through the keys and values of the car_prices dictionary printing out some information about each one permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Complete the code to iterate through the keys and values of the car_prices dictionary, printing out some information about each one.</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">car_listing</span><span class=\"token punctuation\">(</span>car_prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token keyword\">for</span> key <span class=\"token keyword\">in</span> car_prices<span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">+=</span> <span class=\"token string\">\"{} costs {} dollars\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>car_prices<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span>\n  <span class=\"token keyword\">return</span> result\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>car_listing<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Kia Soul\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">19000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lamborghini Diablo\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">55000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ford Fiesta\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">13000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Toyota Prius\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">24000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"2-taylor-and-rory-are-hosting-a-party-they-sent-out-invitations-and-each-one-collected-responses-into-dictionaries-with-names-of-their-friends-and-how-many-guests-each-friend-is-bringing-each-dictionary-is-a-partial-list-but-rorys-list-has-more-current-information-about-the-number-of-guests-fill-in-the-blanks-to-combine-both-dictionaries-into-one-with-each-friend-listed-only-once-and-the-number-of-guests-from-rorys-dictionary-taking-precedence-if-a-name-is-included-in-both-dictionaries-then-print-the-resulting-dictionary\"><a href=\"#2-taylor-and-rory-are-hosting-a-party-they-sent-out-invitations-and-each-one-collected-responses-into-dictionaries-with-names-of-their-friends-and-how-many-guests-each-friend-is-bringing-each-dictionary-is-a-partial-list-but-rorys-list-has-more-current-information-about-the-number-of-guests-fill-in-the-blanks-to-combine-both-dictionaries-into-one-with-each-friend-listed-only-once-and-the-number-of-guests-from-rorys-dictionary-taking-precedence-if-a-name-is-included-in-both-dictionaries-then-print-the-resulting-dictionary\" aria-label=\"2 taylor and rory are hosting a party they sent out invitations and each one collected responses into dictionaries with names of their friends and how many guests each friend is bringing each dictionary is a partial list but rorys list has more current information about the number of guests fill in the blanks to combine both dictionaries into one with each friend listed only once and the number of guests from rorys dictionary taking precedence if a name is included in both dictionaries then print the resulting dictionary permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Taylor and Rory are hosting a party. They sent out invitations, and each one collected responses into dictionaries, with names of their friends and how many guests each friend is bringing. Each dictionary is a partial list, but Rory’s list has more current information about the number of guests. Fill in the blanks to combine both dictionaries into one, with each friend listed only once, and the number of guests from Rory’s dictionary taking precedence, if a name is included in both dictionaries. Then print the resulting dictionary.</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">  <span class=\"token comment\"># Combine both dictionaries into one, with each key listed </span>\n  <span class=\"token comment\"># only once, and the value from guests1 taking precedence</span>\n  combined_dic <span class=\"token operator\">=</span> guests1\n  <span class=\"token keyword\">for</span> key2 <span class=\"token keyword\">in</span> guests2<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> key2 <span class=\"token keyword\">in</span> guests1<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">pass</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n      combined_dic<span class=\"token punctuation\">[</span>key2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> guests2<span class=\"token punctuation\">[</span>key2<span class=\"token punctuation\">]</span>\n  \n  <span class=\"token keyword\">return</span> combined_dic\n\nRorys_guests <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"Adam\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Brenda\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"David\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Jose\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Charlotte\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Terry\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Robert\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\nTaylors_guests <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"David\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Nancy\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Robert\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Adam\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Samantha\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Chris\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>combine_guests<span class=\"token punctuation\">(</span>Rorys_guests<span class=\"token punctuation\">,</span> Taylors_guests<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"3-use-a-dictionary-to-count-the-frequency-of-letters-in-the-input-string-only-letters-should-be-counted-not-blank-spaces-numbers-or-punctuation-upper-case-should-be-considered-the-same-as-lower-case-for-example-count_lettersthis-is-a-sentence-should-return-t-2-h-1-i-2-s-3-a-1-e-3-n-2-c-1\"><a href=\"#3-use-a-dictionary-to-count-the-frequency-of-letters-in-the-input-string-only-letters-should-be-counted-not-blank-spaces-numbers-or-punctuation-upper-case-should-be-considered-the-same-as-lower-case-for-example-count_lettersthis-is-a-sentence-should-return-t-2-h-1-i-2-s-3-a-1-e-3-n-2-c-1\" aria-label=\"3 use a dictionary to count the frequency of letters in the input string only letters should be counted not blank spaces numbers or punctuation upper case should be considered the same as lower case for example count_lettersthis is a sentence should return t 2 h 1 i 2 s 3 a 1 e 3 n 2 c 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Use a dictionary to count the frequency of letters in the input string. Only letters should be counted, not blank spaces, numbers, or punctuation. Upper case should be considered the same as lower case. For example, count_letters(“This is a sentence.”) should return {‘t’: 2, ‘h’: 1, ‘i’: 2, ‘s’: 3, ‘a’: 1, ‘e’: 3, ‘n’: 2, ‘c’: 1}.</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">count_letters</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\"># Go through each letter in the text</span>\n  convert_text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">for</span> letter <span class=\"token keyword\">in</span> convert_text<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> letter<span class=\"token punctuation\">.</span>isalpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">if</span> letter <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n        result<span class=\"token punctuation\">[</span>letter<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        result<span class=\"token punctuation\">[</span>letter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n  <span class=\"token keyword\">return</span> result\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count_letters<span class=\"token punctuation\">(</span><span class=\"token string\">\"AaBbCc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Should be {'a': 2, 'b': 2, 'c': 2}</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count_letters<span class=\"token punctuation\">(</span><span class=\"token string\">\"Math is fun! 2+2=4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Should be {'m': 1, 'a': 1, 't': 1, 'h': 1, 'i': 1, 's': 1, 'f': 1, 'u': 1, 'n': 1}</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count_letters<span class=\"token punctuation\">(</span><span class=\"token string\">\"This is a sentence.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Should be {'t': 2, 'h': 1, 'i': 2, 's': 3, 'a': 1, 'e': 3, 'n': 2, 'c': 1}</span></code></pre></div>","fields":{"slug":"/posts/python-practice3","tagSlugs":["/tag/python/"]},"frontmatter":{"date":"2020-02-16T11:40:23","description":"python-practice3","tags":["python"],"title":"python-practice3"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/python-practice3"}}}