{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/modules-packages","result":{"data":{"markdownRemark":{"id":"b3fc5dcc-af59-5319-b3dd-1889c633695b","html":"<h1 id=\"1-sysmodules-와-syspath-의-차이점\"><a href=\"#1-sysmodules-%EC%99%80-syspath-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"1 sysmodules 와 syspath 의 차이점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. sys.modules 와 sys.path 의 차이점</h1>\n<p>sys.path 는 실제 package 를 포함하는 경로의 리스트 이다.\nsys.path 를 print 해보고 해당경로로 가보면 모듈들이 있음을 확인할 수 있음.\nsys.modules는 이미 import된 모듈과 패키지들을 저장하고 있는 dictionary 이며 파이썬이 모듈/패키지를 찾기위해 가장 먼저 확인하는 dictionary 이며 전역 환경 변수의 성격을 가지고 있음.\n예를 들어 내가 abc 라는 모듈을 임포트하려고 한다면 먼저 sys.modules에서 찾고 여기에 없으면 built-in 모듈들을 확인하고 마지막으로 sys.path 에서 찾는다.</p>\n<h1 id=\"2-파이썬은-sys-모듈의-위치를-어떻게-찾을-수-있는지\"><a href=\"#2-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9D%80-sys-%EB%AA%A8%EB%93%88%EC%9D%98-%EC%9C%84%EC%B9%98%EB%A5%BC-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%B0%BE%EC%9D%84-%EC%88%98-%EC%9E%88%EB%8A%94%EC%A7%80\" aria-label=\"2 파이썬은 sys 모듈의 위치를 어떻게 찾을 수 있는지 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 파이썬은 sys 모듈의 위치를 어떻게 찾을 수 있는지</h1>\n<p>파이썬에서 제공되는 sys.py 모듈의 <strong>loader</strong> 클래스의 exec_module 메소드를 통해서 파이썬이 초기화 될때 로드해서 찾을 수 있게함.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@classmethod</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">load_module</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># real signature unknown</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    Load the specified module into sys.modules and return it.\n    \n        This method is deprecated.  Use loader.exec_module instead.\n    \"\"\"</span>\n    <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">module_repr</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># reliably restored by inspect</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    Return repr for the module.\n    \n            The method is deprecated.  The import machinery does the job itself.\n    \"\"\"</span>\n    <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># real signature unknown</span>\n    <span class=\"token keyword\">pass</span>\n\n__weakref__ <span class=\"token operator\">=</span> <span class=\"token builtin\">property</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> self<span class=\"token punctuation\">:</span> <span class=\"token builtin\">object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">lambda</span> self<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">lambda</span> self<span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># default</span>\n<span class=\"token triple-quoted-string string\">\"\"\"list of weak references to the object (if defined)\"\"\"</span>\n\n\n__dict__ <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span> <span class=\"token comment\"># (!) real value is \"mappingproxy({'__module__': '_frozen_importlib', '__doc__': 'Meta path import for built-in modules.\\\\n\\\\n </span></code></pre></div>\n<h1 id=\"3-3-absolute-path-와-relative-path의-차이점\"><a href=\"#3-3-absolute-path-%EC%99%80-relative-path%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"3 3 absolute path 와 relative path의 차이점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 3. Absolute path 와 relative path의 차이점</h1>\n<p>현재 파이썬 파일기준으로 경로를 설정할때 사용되며, 현재 위치를 표현할때 dot( .)으로 표시하며,\nabsoulte path는 터미널에서 pwd로 확인할 수 있는 경로이지만 파이썬에서 사용할때는 / 대신 하위 디렉토리를 표현하기 위해 dot( .) 을 사용함\nrelative path는 모듈간의 참조하는 path가 얽혀있으면 모듈 파일의 위치를 변경할때 경로를 전부 수정해야하기 떄문에 모듈 임포트시에는 보통 absoulte path 사용하는게 권장됨.</p>","fields":{"slug":"/posts/modules-packages","tagSlugs":["/tag/python/"]},"frontmatter":{"date":"2019-12-09T19:34:17","description":"How import statement finds modules and packages","tags":["python"],"title":"How import statement finds modules and packages"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/modules-packages"}}}