{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/python-list-comprehension","result":{"data":{"markdownRemark":{"id":"584c2f53-b3e2-5c0e-8451-46b2d46e3f1e","html":"<h1 id=\"1-list-comprehension\"><a href=\"#1-list-comprehension\" aria-label=\"1 list comprehension permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. List comprehension</h1>\n<p>letâ€™s compare (print<em>list</em>with<em>comprehension) with (print</em>list<em>with</em>for) functions.</p>\n<p>As you can see, the code readability of (print<em>list</em>with<em>comprehension) is better than (print</em>list<em>with</em>for).</p>\n<p>So, I will consider using the list comprehension to do same thing.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">v_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\nv_dict_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"korea\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"japan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"china\"</span><span class=\"token punctuation\">]</span>\nv_dict_value <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">print_list_with_comprehension</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    v_list_comprehension <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x<span class=\"token operator\">*</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> v_list <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span> v_list_comprehension<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">print_list_with_for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> v_list<span class=\"token punctuation\">:</span>\n        result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>v<span class=\"token operator\">*</span>v<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">print_dict_with_comprehension</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    v_dict_comprehension <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> k<span class=\"token punctuation\">:</span>v <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>v_dict_key<span class=\"token punctuation\">,</span> v_dict_value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>v_dict_comprehension<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"===print list===\"</span><span class=\"token punctuation\">)</span>\n    print_list_with_comprehension<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    print_dict_with_comprehension<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Reference\n<a href=\"https://github.com/kssim/python_effective_flow_control\">https://github.com/kssim/python_effective_flow_control</a></p>","fields":{"slug":"/posts/python-list-comprehension","tagSlugs":["/tag/python/","/tag/list-comprehension/"]},"frontmatter":{"date":"2020-02-08T21:22:40","description":"python-list-comprehension","tags":["python","list-comprehension"],"title":"python-list-comprehension"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/python-list-comprehension"}}}