{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/algorithm-for-sorting","result":{"data":{"markdownRemark":{"id":"2f45e7c5-bd86-5ec4-867a-ad5f07cc0c80","html":"<h1 id=\"1-선택-정렬\"><a href=\"#1-%EC%84%A0%ED%83%9D-%EC%A0%95%EB%A0%AC\" aria-label=\"1 선택 정렬 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 선택 정렬</h1>\n<p>선택정렬은 정렬되지 않은 데이터 중 가장 작은 데이터를 선택해서맨 앞에서부터 순서대로 정렬해 나가는 알고리즘이다.\n예를 들어 아래와 같이 선택정렬을 구현하게 되면 처음 min값을 찾고, min값의 인덱스로 스왑해서 구현하게 됩니다.\nO(n2) 의 time complexity 의 성능이며 많은 양의 데이터를 정렬하기에는 적합하지 않음.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">selectionSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    min_index <span class=\"token operator\">=</span> <span class=\"token number\">0</span> \n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        \n        <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">min</span> <span class=\"token operator\">></span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                min_index <span class=\"token operator\">=</span> j\n\n        temp <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span>\n        nums<span class=\"token punctuation\">[</span>min_index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp\n\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> nums\n\n\ntest_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start of program\"</span><span class=\"token punctuation\">)</span>\nre_nums <span class=\"token operator\">=</span> selectionSort<span class=\"token punctuation\">(</span>test_list<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re_nums<span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"2-버블-정렬\"><a href=\"#2-%EB%B2%84%EB%B8%94-%EC%A0%95%EB%A0%AC\" aria-label=\"2 버블 정렬 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 버블 정렬</h1>\n<p>버블 정렬은 인접한 데이터를 교환해서 정렬하는 알고리즘이며,\n만약 배열로 구현하게 되면 한번 정렬이 될때 배열의 마지막 자리에 정렬된 값을 위치 시키게 되며 비교하는 과정에서 1번,2번 인덱스\n2번,3번 인덱스 연속적으로 비교하게 되고 이를 스왑해주게 되는데 이런 스왑이 일어나는 모습이 거품과 같이 보여 붙여진 알고리즘 이다.\n성능은 정렬알고리즘중에서 삽입정렬이나 Quicksort 과같은 알고리즘 보다는 느리므로 많은 양의 데이터를 정렬하기에는 좋지 않다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n            <span class=\"token keyword\">if</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n\n                temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n                arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> arr\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'start of program'</span><span class=\"token punctuation\">)</span>\n\ntest_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\nbubbleSort<span class=\"token punctuation\">(</span>test_arr<span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"/posts/algorithm-for-sorting","tagSlugs":["/tag/terminal/","/tag/linux/"]},"frontmatter":{"date":"2020-01-12T18:24:17","description":"algorithm for sorting","tags":["terminal","linux"],"title":"algorithm for sorting"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/algorithm-for-sorting"}}}