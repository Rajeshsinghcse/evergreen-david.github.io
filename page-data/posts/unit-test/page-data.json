{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/unit-test","result":{"data":{"markdownRemark":{"id":"3820d20f-b970-5b47-8296-1efaa66daa53","html":"<h1 id=\"1-ui-testingend-to-end-testing\"><a href=\"#1-ui-testingend-to-end-testing\" aria-label=\"1 ui testingend to end testing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. UI Testing/End-To-End Testing</h1>\n<p>백엔드 프론트엔드 데이터베이스 모든 시스템 연결해서 테스트\n가장하기가 쉽고 직관적이지만, 비용이 비쌈\n프론트/백 준배포 하고 테스트 하므로\n사람이 눈으로 보고 테스트 하므로</p>\n<h1 id=\"2-integration-testing\"><a href=\"#2-integration-testing\" aria-label=\"2 integration testing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Integration Testing</h1>\n<p>백엔드 서버만 띄우고\nPostman으로 Get해서 제대로 리턴 값이 오는지\n프론트엔드는 목 데이터로 테스트</p>\n<h1 id=\"3-unit-testing\"><a href=\"#3-unit-testing\" aria-label=\"3 unit testing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Unit Testing</h1>\n<p>테스트할수 있는 가장 작은 단위\n코드를 테스트 하는것\n가장 작은 단위 , 함수 테스트\n코드로 코드를 테스트\n내코드를 테스트하는 코드를 짜는 것\n새로추가된 것만 테스트 하다보니깐\n이전 기능에서 버그 발생\n-> 테스트 안하므로 버그 생김\n테스트 자동화가 필요하고 테스트 속도 빨라야함\n프론트엔드의 잘못인지 백엔드의 잘못인지 빨리 구분이 필요\n지금당장은 간단할수 있지만, 추후 내가짠 코드를 남이 수정할 수도 있기 때문에 Migration 이슈가 발생할 수도 있고 잘 정리 해야함</p>\n<h1 id=\"4테스트-원칙\"><a href=\"#4%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9B%90%EC%B9%99\" aria-label=\"4테스트 원칙 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.테스트 원칙</h1>\n<p>stateless 여야함, 독립적이어야함\n매개변수 추가되면 유닛테스트 추가해야함\nTest Coverage 가 100%가 되어야함\n최소 90% 이상은 되어야 함</p>","fields":{"slug":"/posts/unit-test","tagSlugs":["/tag/unit-test/"]},"frontmatter":{"date":"2020-02-01T21:06:26","description":"unit-test","tags":["unit-test"],"title":"unit test"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/unit-test"}}}